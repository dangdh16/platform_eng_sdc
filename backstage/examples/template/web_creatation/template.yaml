apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: web_creatation
  annotations:
    github.com/project-slug: ${{ values.repoUrl | projectSlug }}
  title: Deploy sample AWS Web application
  description: Create a new sample AWS Web application
  tags:
    - aws
spec:
  owner: dangdh
  type: service
  # these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Webapp information
      required:
        - appname
      properties:
        appname:
          title: App Name
          type: string
          description: App name
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Account information
      required:
        - accessKeyId
        - secretAccessKey
      properties:
        accessKeyId:
          title: Access Key ID
          type: string
          description: Access key ID
          ui:autofocus: true
          ui:options:
            rows: 5
        secretAccessKey:
          title: Secret access key
          type: string
          description: Secret access key
          ui:autofocus: false
          ui:widget: password
        region:
          title: Region
          description: AWS region of the bucket
          type: string
          enum:
            - us-east-1
            - ap-southeast-1
          enumNames:
            - North Virgina (us-east-1)
            - Singapore (ap-southeast-1)
          uniqueItems: true
          ui:widget: select
    - title: Choose repo location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # here's the steps that are executed in series in the scaffolder backend
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: ${{ parameters.name }}
          region: ${{ parameters.region }}
          versioning: ${{ parameters.versioning }}
          repoUrl: ${{ parameters.repoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        protectDefaultBranch: false
        secrets: {
          AWS_ACCESS_KEY_ID: "${{ parameters.accessKeyId }}",
          AWS_SECRET_ACCESS_KEY: "${{ parameters.secretAccessKey }}"
        }
        repoVariables: {
          AWS_ACCESS_KEY_ID: "${{ parameters.accessKeyId }}"
        }

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}