name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ '${{ secrets.AWS_ACCESS_KEY_ID }}' }}
  AWS_SECRET_ACCESS_KEY: ${{ '${{ secrets.AWS_SECRET_ACCESS_KEY }}' }}
  AWS_REGION: us-east-1

permissions:
  contents: read

jobs:
  terraform:
    name: 'Provision S3 bucket'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Terraform Init
      working-directory: ./s3
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: ./s3
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: ./s3
      run: terraform plan

      # On push to "master", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      working-directory: ./s3
      run: terraform apply -auto-approve

  deploy-to-s3:
    needs: [terraform]
    name: 'Deploy React app on S3 bucket'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checking out code
      uses: actions/checkout@v3

    - name: Installing Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "16"

    - name: Installing dependencies
      working-directory: ./react
      run: npm install

    - name: Building project
      working-directory: ./react
      run: npm run build

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ '${{ env.AWS_ACCESS_KEY_ID }}' }}
        aws-secret-access-key: ${{ '${{ env.AWS_SECRET_ACCESS_KEY }}' }}
        aws-region: ${{ '${{ env.AWS_REGION }}' }}

    - name: Deploy to S3 bucket
      working-directory: ./react
      run: aws s3 sync ./build/ s3://${{ values.component_id }} --delete